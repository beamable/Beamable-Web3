//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.Solana"/> </summary
    public sealed class SolanaClient : Beamable.Server.MicroserviceClient
    {
        
        public SolanaClient(Beamable.BeamContext context = null) : 
                base(context)
        {
        }
        
        /// <summary>
        /// Call the ServerCall method on the Solana microservice
        /// <see cref="Beamable.Microservices.Solana.ServerCall"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Unit> ServerCall()
        {
            string[] serializedFields = new string[0];
            return this.Request<Beamable.Common.Unit>("Solana", "ServerCall", serializedFields);
        }
        
        /// <summary>
        /// Call the Echo method on the Solana microservice
        /// <see cref="Beamable.Microservices.Solana.Echo"/>
        /// </summary>
        public Beamable.Common.Promise<string> Echo(string message)
        {
            string serialized_message = this.SerializeArgument<string>(message);
            string[] serializedFields = new string[] {
                    serialized_message};
            return this.Request<string>("Solana", "Echo", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersSolanaClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : Beamable.Server.MicroserviceClientDataWrapper<string>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    internal static class ExtensionsForSolanaClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<SolanaClient>();
        }
        
        public static SolanaClient Solana(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<SolanaClient>();
        }
    }
}
